import json
import os
import subprocess
import sys


subprocess.call('pip install pymysql -t /tmp/ --no-cache-dir'.split(), stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
sys.path.insert(1, '/tmp/')
import pymysql


def lambda_handler(event, context):
    # TODO implement
    try:
        connection = pymysql.connect(host='database-3.cyvk3sdc68be.us-east-1.rds.amazonaws.com',
                                             database='Sdb',
                                             user='admin',
                                             password='admin123')
        print(connection)                                
       
        print(event)
        data=event
        print(data)
        # data = json.loads(event["body"])
       
        customer_code=data['customercode']
        print(customer_code)
        #Based on customer code, fetch the record from DB - customer name, company name, order type, power required, power fulfilled
        # Initialize the below parameters based on the items fetched from DB
        #print("Customer Code is",customer_code)
        Customer_name="Customer 1"
        Company_name="Company 1"
        Order_Type="Shared"
        Power_Required=100
        Power_Fulfilled=95
        Term=12
        
        if Order_Type=="Dedicated":
            Rate=20
        elif Order_Type=="Shared":
            Rate=15
        else:
            Rate=10
        
        print("Order_type =",Order_Type)
    
        Total_Bill=Power_Fulfilled*Rate*Term
        print("Total_Bill=", Total_Bill)
        
        
        Order_Status="Complete"
        ##Add code to update Total_Bill, and Order Status in the DB.
        
        message='Hello from Lambda! Order processed. Total Bill is = '+str(Total_Bill)
        
    except  pymysql.MySQLError as e:
        print("Error while connecting to MySQL", e)
    
    finally:
            print("MySQL connection is closed")
    return {
        'statusCode': 200,
        #'body': json.dumps('Hello from Lambda')
        'body':json.dumps(message)
    }
